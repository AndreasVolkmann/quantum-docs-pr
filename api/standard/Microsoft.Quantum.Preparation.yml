### YamlMime:QSharpNamespace
uid: microsoft.quantum.preparation
name: Microsoft.Quantum.Preparation
functions:
- uid: microsoft.quantum.preparation.blochspherecoordinates
  summary: |-
    Computes the Bloch sphere coordinates for a single-qubit state.

    Given two complex numbers $a0, a1$ that represent the qubit state, computes coordinates
    on the Bloch sphere such that
    $a0 \ket{0} + a1 \ket{1} = r e^{it}(e^{-i \phi /2}\cos{(\theta/2)}\ket{0}+e^{i \phi /2}\sin{(\theta/2)}\ket{1})$.
- uid: microsoft.quantum.preparation.quantumrom
  summary: |-
    Uses the Quantum ROM technique to represent a given density matrix.

    Given a list of $N$ coefficients $\alpha_j$, this returns a unitary $U$ that uses the Quantum-ROM
    technique to prepare
    an approximation  $\tilde\rho\sum_{j=0}^{N-1}p_j\ket{j}\bra{j}$ of the purification of the density matrix
    $\rho=\sum_{j=0}^{N-1}\frac{|alpha_j|}{\sum_k |\alpha_k|}\ket{j}\bra{j}$. In this approximation, the
    error $\epsilon$ is such that $|p_j-\frac{|alpha_j|}{\sum_k |\alpha_k|}|\le \epsilon / N$ and
    $\|\tilde\rho - \rho\| \le \epsilon$. In other words,
    $$
    \begin{align}
    U\ket{0}^{\lceil\log_2 N\rceil}\ket{0}^{m}=\sum_{j=0}^{N-1}\sqrt{p_j} \ket{j}\ket{\text{garbage}_j}.
    \end{align}
    $$
- uid: microsoft.quantum.preparation.quantumromqubitcount
  summary: |-
    Returns the total number of qubits that must be allocated
    to the operation returned by `QuantumROM`.
- uid: microsoft.quantum.preparation.statepreparationcomplexcoefficients
  summary: |-
    Returns an operation that prepares a specific quantum state.

    The returned operation $U$ prepares an arbitrary quantum
    state $\ket{\psi}$ with complex coefficients $r_j e^{i t_j}$ from
    the $n$-qubit computational basis state $\ket{0...0}$.

    The action of U on a newly-allocated register is given by
    $$
    \begin{align}
    U\ket{0...0}=\ket{\psi}=\frac{\sum_{j=0}^{2^n-1}r_j e^{i t_j}\ket{j}}{\sqrt{\sum_{j=0}^{2^n-1}|r_j|^2}}.
    \end{align}
    $$
- uid: microsoft.quantum.preparation.statepreparationpositivecoefficients
  summary: |-
    Returns an operation that prepares the given quantum state.

    The returned operation $U$ prepares an arbitrary quantum
    state $\ket{\psi}$ with positive coefficients $\alpha_j\ge 0$ from
    the $n$-qubit computational basis state $\ket{0...0}$.

    The action of U on a newly-allocated register is given by
    $$
    \begin{align}
    U \ket{0\cdots 0} = \ket{\psi} = \frac{\sum_{j=0}^{2^n-1}\alpha_j \ket{j}}{\sqrt{\sum_{j=0}^{2^n-1}|\alpha_j|^2}}.
    \end{align}
    $$
operations:
- uid: microsoft.quantum.preparation.preparearbitrarystate
  summary: |-
    Returns an operation that prepares a given quantum state.

    The returned operation $U$ prepares an arbitrary quantum
    state $\ket{\psi}$ with complex coefficients $r_j e^{i t_j}$ from
    the $n$-qubit computational basis state $\ket{0...0}$.

    $$
    \begin{align}
    U\ket{0...0}=\ket{\psi}=\frac{\sum_{j=0}^{2^n-1}r_j e^{i t_j}\ket{j}}{\sqrt{\sum_{j=0}^{2^n-1}|r_j|^2}}.
    \end{align}
    $$
- uid: microsoft.quantum.preparation.prepareuniformsuperposition
  summary: |-
    Creates a uniform superposition over states that encode 0 through `nIndices`.

    That is, this unitary $U$ creates a uniform superposition over all number states
    $0$ to $M-1$, given an input state $\ket{0\cdots 0}$. In other words,
    $$
    \begin{align}
    U\ket{0}=\frac{1}{\sqrt{M}}\sum_{j=0}^{M-1}\ket{j}.
    \end{align}
    $$.
...
